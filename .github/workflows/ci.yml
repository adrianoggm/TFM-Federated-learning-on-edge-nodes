name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install deps
      run: |
        python -m pip install --upgrade pip
        pip install black isort flake8 mypy pytest
        # Install dependencies for each subproject if they exist
        if [ -f "fl-client/requirements.txt" ]; then
          pip install -r fl-client/requirements.txt || true
        fi
        if [ -f "fl-server/requirements.txt" ]; then
          pip install -r fl-server/requirements.txt || true
        fi
        if [ -f "fl-common/requirements.txt" ]; then
          pip install -r fl-common/requirements.txt || true
        fi
        if [ -f "fl-ml-models/requirements.txt" ]; then
          pip install -r fl-ml-models/requirements.txt || true
        fi
        if [ -f "requirements.txt" ]; then
          pip install -r requirements.txt || true
        fi

    - name: Format check
      run: |
        black --check fl-client/ fl-server/ fl-common/ fl-ml-models/ || true
        isort --check-only fl-client/ fl-server/ fl-common/ fl-ml-models/ || true

    - name: Lint
      run: |
        if [ -d "fl-client" ]; then
          flake8 fl-client/
        fi
        if [ -d "fl-server" ]; then
          flake8 fl-server/
        fi
        if [ -d "fl-common" ]; then
          flake8 fl-common/
        fi
        if [ -d "fl-ml-models" ]; then
          flake8 fl-ml-models/
        fi

    - name: Type check
      run: |
        echo "Running type checks where possible..."
        if [ -d "fl-client/fl_client" ]; then
          echo "Type checking fl-client..."
          cd fl-client && (python -m mypy fl_client --ignore-missing-imports || echo "Type checking skipped for fl-client")
          cd ..
        fi
        if [ -d "fl-server/fl_server" ]; then
          echo "Type checking fl-server..."
          cd fl-server && (python -m mypy fl_server --ignore-missing-imports || echo "Type checking skipped for fl-server")
          cd ..
        fi
        if [ -d "fl-common/src" ]; then
          echo "Type checking fl-common..."
          cd fl-common && (python -m mypy src --ignore-missing-imports || echo "Type checking skipped for fl-common")
          cd ..
        fi
        if [ -d "fl-ml-models" ]; then
          echo "Type checking fl-ml-models..."
          python -m mypy fl-ml-models --ignore-missing-imports || echo "Type checking skipped for fl-ml-models"
        fi

    - name: Run tests
      run: |
        if [ -d "fl-client/tests" ]; then
          cd fl-client && python -m pytest tests/ --maxfail=1 --disable-warnings -q || true
          cd ..
        fi
        if [ -d "fl-server/tests" ]; then
          cd fl-server && python -m pytest tests/ --maxfail=1 --disable-warnings -q || true
          cd ..
        fi
        if [ -d "fl-common/tests" ]; then
          cd fl-common && python -m pytest tests/ --maxfail=1 --disable-warnings -q || true
          cd ..
        fi
        if [ -d "fl-ml-models/tests" ]; then
          cd fl-ml-models && python -m pytest tests/ --maxfail=1 --disable-warnings -q || true
          cd ..
        fi
